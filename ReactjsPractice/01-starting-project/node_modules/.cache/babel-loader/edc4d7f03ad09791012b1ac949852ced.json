{"ast":null,"code":"var _jsxFileName = \"D:\\\\LearnReactJS\\\\ReactjsPractice\\\\01-starting-project\\\\src\\\\compoment\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport classes from \"./Cart.module.css\";\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport ContextCart from \"../../Context/ContextCart\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const ctxCart = useContext(ContextCart);\n  const [isClickOrder, setISClickOrder] = useState(false);\n  const hasItems = ctxCart.items.length > 0; //true\n\n  const cartItemAddHandler = item => {\n    ctxCart.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const cartItemRemoveHandler = item => {\n    ctxCart.removeItem(item);\n  }; //   if (ctxCart.items.length > 0) sethasItems(true);\n  //lấy giỏ hàng ra\n\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: ctxCart.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n\n  const orderHandler = () => {\n    setISClickOrder(true);\n  };\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes[\"button--alt\"],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n\n  const submitOrderHandler = userData => {\n    fetch(\"https://meal-7e0a4-default-rtdb.firebaseio.com/orders.json\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: ctxCart.items\n      })\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [ctxCart.totalAmount, \" $\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), isClickOrder && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), !isClickOrder && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"Z0SYhyHM8uH6xcEu3M7Yuyyz9X4=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/LearnReactJS/ReactjsPractice/01-starting-project/src/compoment/Cart/Cart.js"],"names":["useContext","useState","classes","Modal","CartItem","ContextCart","Checkout","Cart","props","ctxCart","isClickOrder","setISClickOrder","hasItems","items","length","cartItemAddHandler","item","addItem","amount","cartItemRemoveHandler","removeItem","cartItems","map","name","price","bind","id","orderHandler","modalActions","actions","onClose","button","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","total","totalAmount"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\r\nimport classes from \"./Cart.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\nimport CartItem from \"./CartItem\";\r\nimport ContextCart from \"../../Context/ContextCart\";\r\nimport Checkout from \"./Checkout\";\r\nconst Cart = (props) => {\r\n  const ctxCart = useContext(ContextCart);\r\n  const [isClickOrder, setISClickOrder] = useState(false);\r\n  const hasItems = ctxCart.items.length > 0; //true\r\n  const cartItemAddHandler = (item) => {\r\n    ctxCart.addItem({ ...item, amount: 1 });\r\n  };\r\n  const cartItemRemoveHandler = (item) => {\r\n    ctxCart.removeItem(item);\r\n  };\r\n  //   if (ctxCart.items.length > 0) sethasItems(true);\r\n  //lấy giỏ hàng ra\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {ctxCart.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const orderHandler = () => {\r\n    setISClickOrder(true);\r\n  };\r\n  const modalActions = (\r\n    <div className={classes.actions}>\r\n      <button className={classes[\"button--alt\"]} onClick={props.onClose}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button className={classes.button} onClick={orderHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n  const submitOrderHandler = (userData) => {\r\n    fetch(\"https://meal-7e0a4-default-rtdb.firebaseio.com/orders.json\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        user: userData,\r\n        orderedItems: ctxCart.items,\r\n      }),\r\n    });\r\n  };\r\n  return (\r\n    <Modal onClose={props.onClose}>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{ctxCart.totalAmount} $</span>\r\n      </div>\r\n      {isClickOrder && (\r\n        <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />\r\n      )}\r\n      {!isClickOrder && modalActions}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}